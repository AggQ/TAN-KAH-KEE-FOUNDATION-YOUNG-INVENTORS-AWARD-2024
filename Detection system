import cv2
import time
import datetime
import imutils


CONTOUR_AREA_THRESHOLD = 800
RECTANGLE_COLOR = (0, 255, 0)  # Lime color
RECTANGLE_THICKNESS = 2
FONT = cv2.FONT_HERSHEY_SIMPLEX
TEXT_COLOR = (0, 0, 255)  # Red color

def motion_detection():
    video_capture = cv2.VideoCapture(0)  # Uses default camera
    time.sleep(2)  # Allows the camera to warm up

    first_frame = None

    while True:
        ret, frame = video_capture.read()  # Captures frame
        if not ret:
            print("Failed to capture frame")
            break

        text = 'Area Clear'

        greyscale_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        blur_frame = cv2.GaussianBlur(greyscale_frame, (21, 21), 0)

        if first_frame is None:
            first_frame = blur_frame
            continue  # Skip until the next frame

        motion_detection_delta = cv2.absdiff(first_frame, blur_frame)
        thresh = cv2.threshold(motion_detection_delta, 100, 255, cv2.THRESH_BINARY)[1]
        dilate_image = cv2.dilate(thresh, None, iterations=2)

        # Find contours
        cnts = cv2.findContours(dilate_image.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        cnts = imutils.grab_contours(cnts)

        for c in cnts:
            if cv2.contourArea(c) > CONTOUR_AREA_THRESHOLD:
                x, y, w, h = cv2.boundingRect(c)
                cv2.rectangle(frame, (x, y), (x+w, y+h), RECTANGLE_COLOR, RECTANGLE_THICKNESS)
                text = 'Motion Detected'

        # Draw text, timestamp
        cv2.putText(frame, 'Room Status: %s' % text, (10, 20), FONT, 0.5, TEXT_COLOR, 2)
        cv2.putText(frame, datetime.datetime.now().strftime('%A %d %B %Y %I:%M:%S%p'),
                    (10, frame.shape[0] - 10), FONT, 0.35, TEXT_COLOR, 1)

        # Display frames
        cv2.imshow('Tracking system', frame)
        cv2.imshow('Motion Detection', dilate_image)
        cv2.imshow('Motion Detection Delta', motion_detection_delta)

        # Handle key press
        key = cv2.waitKey(1) & 0xFF
        if key == ord('q'):
            break

    # Release video capture object and close windows
    video_capture.release()
    cv2.destroyAllWindows()

#  End of Project
if __name__ == '__main__':  # Run the system
    motion_detection()
